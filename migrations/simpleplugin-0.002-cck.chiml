ins: action, migrationConfig
out: output
vars:
  schemas:

    - name: 'hogu'
      collectionName: 'test_hogu'
      fields:
        picture:
          inputTemplate: '<%- cck.input.image %>'
          presentationTemplate: '<%- cck.presentation.image %>'
          bootstrapColWidth: 2
        name:
          notNull: 1
          unique: 1
          bootstrapColWidth: 2
        description:
          inputTemplate: '<%- cck.input.textArea %>'
          tabularPresentationTemplate: '<%- cck.presentation.trimmedText %>'
          presentationTemplate: '<%- cck.presentation.text %>'
          bootstrapColWidth: 6
      selectGroups: ['loggedIn', 'loggedOut']
      insertGroups: ['loggedIn', 'loggedOut']
      updateGroups: ['loggedIn', 'loggedOut']
      deleteGroups: ['loggedIn', 'loggedOut']

    - name: 'servants'
      collectionName: 'test_servants'
      fields:
        picture:
          inputTemplate: '<%- cck.input.image %>'
          presentationTemplate: '<%- cck.presentation.image %>'
        name:
          notNull: 1
          unique: 1
        class:
          inputTemplate: '<%- cck.input.option %>'
          presentationTemplate: '<%- cck.presentation.option %>'
          options:
            saber: 'Saber'
            lancer: 'Lancer'
            archer: 'Archer'
            rider: 'Rider'
            caster: 'Caster'
            assassin: 'Assassin'
          notNull: 1
        mainNoblePhantasm:
          caption: 'Noble Phantasm'
          inputTemplate: '<%- cck.input.many2one %>'
          presentationTemplate: '<%- cck.presentation.many2one %>'
          ref: 'hogu'
          keyField: 'name'
          fields: ['picture', 'name', 'description']
          tab: 'main'
          bootstrapColWidth: 3
        otherNoblePhantasm:
          caption: 'Secondary Noble Phantasm'
          inputTemplate: '<%- cck.input.one2many %>'
          presentationTemplate: '<%- cck.presentation.one2many %>'
          fields:
            name:
              inputTemplate: '<%- cck.input.many2one %>'
              presentationTemplate: '<%- cck.presentation.many2one %>'
              ref: 'hogu'
              keyField: 'name'
              fields: ['picture', 'name', 'description']
              bootstrapColWidth: 8
            story:
              inputTemplate: '<%- cck.input.textArea %>'
              tabularPresentationTemplate: '<%- cck.presentation.trimmedText %>'
              presentationTemplate: '<%- cck.presentation.text %>'
          bootstrapColWidth: 4
          tab: 'secondary'
      tabs:
        main: '<span class="oi oi-cog"></span> Main'
        secondary: '<span class="oi oi-cog"></span> Additional'
      selectGroups: ['loggedIn', 'loggedOut']
      insertGroups: ['loggedIn', 'loggedOut']
      updateGroups: ['loggedIn', 'loggedOut']
      deleteGroups: ['loggedIn', 'loggedOut']

do:

  - if: action == 'up'
    do:
      # upgrade
      - |(schemas) -> [$.cck.createSchema]

    else:
      # downgrade
      - |(schemas) -> [$.cck.removeSchema]
